name: Publish Weather Updates

on:
  workflow_dispatch: # Позволяет запускать рабочий процесс вручную из интерфейса GitHub
  schedule:
    # Запускать каждый день в 00:00 и 12:00 по UTC.
    # Это соответствует 07:00 и 19:00 по времени Пномпеня (GMT+7) без учета летнего времени.
    - cron: '0 0 * * *'
    - cron: '0 12 * * *'

jobs:
  publish:
    runs-on: ubuntu-latest # Запускать на чистой виртуальной машине Ubuntu

    steps:
    - name: Checkout repository # Шаг 1: Клонировать ваш репозиторий
      uses: actions/checkout@v4
      with:
        # Для коммита изменений необходим токен с правами записи
        persist-credentials: true
        fetch-depth: 0 # Получить всю историю для корректного коммита

    - name: Set up Python # Шаг 2: Настроить среду Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Рекомендуется указывать конкретную версию Python

    - name: Install dependencies # Шаг 3: Установить необходимые библиотеки
      run: |
        pip install requests python-telegram-bot Pillow httpx PyYAML # Добавляем PyYAML для работы с файлом данных

    - name: Create backgrounds folders # Шаг 4: Создать папки для фонов, если их нет (важно для правильной работы скрипта)
      run: |
        mkdir -p backgrounds/Пномпень
        mkdir -p backgrounds/Сиануквиль
        mkdir -p backgrounds/Сиемреап
        # Примечание: Убедитесь, что ваши фоновые изображения находятся в этих папках
        # в репозитории GitHub (т.е. закоммичены и запушены).

    - name: Run Python script # Шаг 5: Запустить ваш Python-скрипт
      env:
        # Передаем секреты GitHub в переменные окружения для скрипта
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        ACCUWEATHER_API_KEY: ${{ secrets.ACCUWEATHER_API_KEY }}
        TARGET_CHAT_ID: ${{ secrets.TARGET_CHAT_ID }}
        # GitHub Token для коммита
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Важно: Этот секрет создается автоматически GitHub'ом
      run: python weather_publisher.py

    - name: Commit and Push Changes # Шаг 6: Закоммитить и отправить изменения (сохраненные ID сообщений)
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add message_ids.yml # Добавляем файл, который будет содержать ID сообщений
        git commit -m "chore: Save sent message IDs for deletion" || echo "No changes to commit"
        git push || echo "No new commits to push"

  delete_old_messages:
    runs-on: ubuntu-latest
    needs: publish # Запускать после завершения публикации
    schedule:
      # Запускать каждые 15 минут, чтобы проверять старые сообщения
      - cron: '*/15 * * * *'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install python-telegram-bot PyYAML

      - name: Run deletion script
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TARGET_CHAT_ID: ${{ secrets.TARGET_CHAT_ID }}
        run: python delete_messages.py # Новый скрипт для удаления
