name: Publish Weather Update # Название рабочего процесса

on:
  schedule:
    # Запускать каждый день в 08:00 UTC (или в любое удобное для вас время)
    # Например, '0 8 * * *'
    - cron: '0 8 * * *' 
  workflow_dispatch: # Позволяет запускать рабочий процесс вручную

jobs:
  publish:
    runs-on: ubuntu-latest # Виртуальная машина, на которой будет выполняться задача
    
    steps:
    - name: Checkout repository # Шаг 1: Клонировать ваш репозиторий
      uses: actions/checkout@v4

    - name: Set up Python # Шаг 2: Настроить среду Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Указываем версию Python

    - name: Install dependencies # Шаг 3: Установить необходимые библиотеки
      run: |
        # Убедитесь, что здесь перечислены ВСЕ библиотеки, необходимые для weather_publisher.py
        # Например: python-telegram-bot, httpx, requests, Pillow
        pip install python-telegram-bot httpx requests Pillow 

    - name: Run Weather Publisher Script # Шаг 4: Запустить скрипт публикации погоды
      env:
        # Передаем секреты и переменные окружения, необходимые для weather_publisher.py
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }} 
        ACCUWEATHER_API_KEY: ${{ secrets.ACCUWEATHER_API_KEY }} # Если вы его используете, убедитесь, что секрет добавлен
        
        # Передаем имя файла для ID сообщений, чтобы weather_publisher.py знал куда сохранять
        MESSAGES_TO_DELETE_FILE: messages_to_delete.json 
      run: |
        python weather_publisher.py # Запускаем основной скрипт
