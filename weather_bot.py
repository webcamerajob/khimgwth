import json
import os
import logging
from telegram import Bot
from PIL import Image, ImageDraw, ImageFont
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
USE_PRESET = True
PRESET_FILE = "preset_weather.json"
IMAGE_NAME = f"/tmp/weather_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

def fetch_weather():
    if USE_PRESET:
        if not os.path.exists(PRESET_FILE):
            raise FileNotFoundError(f"–§–∞–π–ª –ø—Ä–µ—Å–µ—Ç–∞ '{PRESET_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        with open(PRESET_FILE) as f:
            return json.load(f)
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ AccuWeather API
    return {}

def generate_weather_image(weather):
    img = Image.new('RGB', (600, 400), color='skyblue')
    draw = ImageDraw.Draw(img)
    try:
        font = ImageFont.truetype("DejaVuSans.ttf", 28)
    except:
        font = ImageFont.load_default()

    draw.text((20, 40), "üå§ –ü–æ–≥–æ–¥–∞ –≤ –ü–Ω–æ–º–ø–µ–Ω–µ", font=font, fill="black")
    draw.text((20, 100), f"{weather['desc']}, {weather['temp']}", font=font, fill="black")
    draw.text((20, 160), f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}", font=font, fill="black")
    draw.text((20, 220), f"–í–µ—Ç–µ—Ä: {weather['wind']}", font=font, fill="black")

    img.save(IMAGE_NAME)
    logging.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {IMAGE_NAME}")
    return IMAGE_NAME

def post_to_telegram(image_path):
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHANNEL_NAME")
    if not token or not chat_id:
        raise EnvironmentError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHANNEL_NAME –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏.")

    bot = Bot(token=token)
    with open(image_path, "rb") as image:
        bot.send_photo(chat_id=chat_id, photo=image, caption="‚õÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑")

def run():
    try:
        weather = fetch_weather()
        image_path = generate_weather_image(weather)
        post_to_telegram(image_path)
        logging.info("–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    run()
