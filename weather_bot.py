import json
import os
import logging
from datetime import datetime
from PIL import Image, ImageDraw, ImageFont
from telegram import Bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
USE_PRESET = True
PRESET_FILE = "preset_weather.json"
IMAGE_NAME = f"/tmp/weather_{datetime.now().strftime('%Y%m%d_%H%M%S')}.jpg"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

def fetch_weather():
    if USE_PRESET:
        if not os.path.exists(PRESET_FILE):
            raise FileNotFoundError(f"–§–∞–π–ª –ø—Ä–µ—Å–µ—Ç–∞ '{PRESET_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        with open(PRESET_FILE) as f:
            return json.load(f)
    return {}

def generate_weather_image(weather):
    try:
        background = Image.open("pp.jpg").convert("RGBA").resize((600, 400))
    except Exception as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ pp.jpg: {e}")

    img = background.copy()
    overlay = Image.new("RGBA", img.size, (0, 0, 0, 0))
    draw = ImageDraw.Draw(overlay)

    try:
        font = ImageFont.truetype("DejaVuSans.ttf", 28)
        font_small = ImageFont.truetype("DejaVuSans.ttf", 20)
    except:
        font = ImageFont.load_default()
        font_small = ImageFont.load_default()

    # –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –ø–ª–∞—à–∫–∞
    draw.rectangle([(10, 20), (590, 270)], fill=(0, 0, 0, 100))

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
    draw.text((30, 40), "üå§ –ü–æ–≥–æ–¥–∞ –≤ –ü–Ω–æ–º–ø–µ–Ω–µ", font=font, fill="white")
    draw.text((30, 100), f"{weather['desc']}, {weather['temp']}", font=font, fill="white")
    draw.text((30, 160), f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}", font=font, fill="white")
    draw.text((30, 220), f"–í–µ—Ç–µ—Ä: {weather['wind']}", font=font, fill="white")

    # –í–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫
    draw.text((400, 360), "Phnom Penh Bot", font=font_small, fill=(255, 255, 255, 180))

    final_img = Image.alpha_composite(img, overlay).convert("RGB")
    final_img.save(IMAGE_NAME)
    logging.info(f"–ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {IMAGE_NAME}")
    return IMAGE_NAME

def post_to_telegram(image_path):
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHANNEL_NAME")

    if not token or not chat_id:
        raise EnvironmentError("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHANNEL_NAME.")

    bot = Bot(token=token)
    with open(image_path, "rb") as image:
        bot.send_photo(chat_id=chat_id, photo=image, caption="‚õÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑")

def run():
    try:
        weather = fetch_weather()
        image_path = generate_weather_image(weather)
        post_to_telegram(image_path)
        logging.info("–ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≥–Ω–æ–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    run()
